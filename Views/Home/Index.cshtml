@using OrderedData.Helpers
@using OrderedData.Services
@inject OrderedData.Services.LanguageService LanguageService
@{
    ViewData["Title"] = "Home Page";
}

@model List<UsersInfoModel>

<div class="container mt-4">
    <div class="d-flex justify-content-between mb-3">
        <h2>@LanguageService.GetText("UsersList") (@LanguageService.GetText("Total"): @ViewBag.TotalUsers)</h2>
        <div>
            <div class="btn-group me-2">
                <a href="@Url.Action("ChangeLanguage", new { lang = "tr", page = ViewBag.CurrentPage })" 
                   class="btn @(ViewBag.CurrentLanguage == "tr" ? "btn-primary" : "btn-outline-primary")">TR</a>
                <a href="@Url.Action("ChangeLanguage", new { lang = "en", page = ViewBag.CurrentPage })" 
                   class="btn @(ViewBag.CurrentLanguage == "en" ? "btn-primary" : "btn-outline-primary")">EN</a>
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-success dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-file-excel"></i> @LanguageService.GetText("ExportToExcel")
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a class="dropdown-item" href="@Url.Action("ExportToExcel", new { lang = "tr" })">
                            <img src="https://flagcdn.com/16x12/tr.png" alt="TR" class="me-2" />
                            Türkçe Excel
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="@Url.Action("ExportToExcel", new { lang = "en" })">
                            <img src="https://flagcdn.com/16x12/gb.png" alt="EN" class="me-2" />
                            English Excel
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>@LanguageService.GetText("Name")</th>
                <th>@LanguageService.GetText("Surname")</th>
                <th>@LanguageService.GetText("Job")</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.Id</td>
                    <td><uppercase text="@user.Name" /></td>
                    <td><uppercase text="@user.Surname" /></td>
                    <td><uppercase text="@user.Job" /></td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-center align-items-center mt-3">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, lang = ViewBag.CurrentLanguage })">
                            &laquo; @LanguageService.GetText("Previous")
                        </a>
                    </li>
                }

                @{
                    int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                    int endPage = Math.Min(ViewBag.MaxPage, startPage + 4);
                    startPage = Math.Max(1, endPage - 4);
                }

                @if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = 1, lang = ViewBag.CurrentLanguage })">1</a>
                    </li>
                    @if (startPage > 2)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, lang = ViewBag.CurrentLanguage })">@i</a>
                    </li>
                }

                @if (endPage < ViewBag.MaxPage)
                {
                    @if (endPage < ViewBag.MaxPage - 1)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.MaxPage, lang = ViewBag.CurrentLanguage })">@ViewBag.MaxPage</a>
                    </li>
                }

                @if (ViewBag.CurrentPage < ViewBag.MaxPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1, lang = ViewBag.CurrentLanguage })">
                            @LanguageService.GetText("Next") &raquo;
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>

    <div class="text-center mt-2">
        @LanguageService.GetText("ShowingPage").Replace("{0}", ViewBag.CurrentPage.ToString()).Replace("{1}", ViewBag.MaxPage.ToString())
    </div>
</div>
